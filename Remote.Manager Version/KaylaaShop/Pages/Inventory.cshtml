@page
@model KaylaaShop.Pages.Kaylaa.InventoryModel

@using  KaylaaShop.Helpers
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration



@{
    ViewData["Title"] = "Inventory";
    Layout = "~/Pages/Shared/_LayoutMain.cshtml";
}

<div class="row">
    <div class="col-xl-12">
       

        <div class="kt-portlet kt-portlet--mobile">


            <div class="kt-portlet__head kt-portlet__head--lg deepBlueBack">
                <div class="kt-portlet__head-label">
                    <span class="kt-portlet__head-icon">
                        <i class="flaticon-calendar"></i>
                    </span>
                    <h2 class="kt-portlet__head-title kt-font-primary whiteFont">
                        All Inventory Products
                    </h2>
                </div>

                <div class="kt-portlet__head-toolbar">

                    <div class="kt-portlet__head-actions">
                        <div class="row mt-4">
                            <div class="form-group form-inline">
                                
                                    <button class="form-control btn border-light deepBlueBack whiteFont mr-1" type="button" onclick="printJS('allProductsTable','html')"> Print Inventory</button>
                                    <select id="shopId" asp-items="Model.allShops" class="form-control deepBlueBack whiteFont"></select>
                                    <input id="serverUrl" type="hidden" value="@Configuration.GetSection("ServerRoot")["HostUrl"]" />
                                </div>

                        </div>

                    </div>

                </div>


            </div>

            <div class="kt-portlet__body">
                <div class="row">
                    <div id="loadingBar" style="display:none;" class="col-md-8">
                        <span class="col-md-2"> Fetching Data  </span>
                         <img class="col-md-5 mt-1"  src="~/infinite-progress-bar.gif" alt="loading" style="height:15px;" />
                    </div>
                </div>
               
                <!--begin: Datatable -->
                <table class="table" id="allProductsTable"></table>
                <!--end: Datatable -->
            </div>

        </div>

    </div>
</div>




@*Modal Product*@
<div class="modal fade" id="modal_product" data-backdrop="static" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Update Product - <span id="code"> </span> </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="brandFrm" enctype="multipart/form-data">

                    <div class="form-group">
                        <label>Product Name</label>
                        <input id="name" type="text" class="form-control form-control-sm">
                    </div>

                    <div class="form-group">
                        <label>Cost Price </label>
                        <input id="costprice" type="text" class="form-control form-control-sm">
                    </div>

                    <div class="row form-group">

                        <div class="col-md-6">
                            <label>Discount Selling Price </label>
                            <input id="discountSellingPrice" type="text" class="form-control form-control-sm">
                        </div>

                        <div class="col-md-6">
                            <label>Normal Selling Price </label>
                            <input id="normalSellingPrice" type="text" class="form-control form-control-sm">
                        </div>

                    </div>

                    <div class="form-group">
                        <label> Size  </label>
                        <input id="size" type="text" class="form-control form-control-sm">
                    </div>


                    <div class="row form-group">
                        <div class="col-md-6">
                            <label for="exampleSelect1">Select Discount</label>
                            <select id="salesDiscount" asp-items="Model.DiscountList" class="form-control form-control-sm"></select>
                        </div>

                        <div class="col-md-6">
                            <label for="exampleSelect1">Select Shop</label>
                            <select id="shopId" asp-items="Model.allShops" class="form-control form-control-sm"></select>
                        </div>
                    </div>

                    <div class="row form-group">
                        <div class="col-md-6">
                            <label>Quantity </label>
                            <input id="qty" type="text" class="form-control form-control-sm">
                        </div>

                        <div class="col-md-6">
                            <label>Last Stock Date</label>
                            <input id="laststockdate" type="date" class="form-control form-control-sm">
                        </div>
                    </div>


                    <input type="hidden" value="" id="productImageUrl" />
                    <input type="hidden" value="" id="productBarcodeUrl" />
                    <input type="hidden" value="" id="productBrandId" />
                    <input type="hidden" value="" id="productCategoryId" />
                    <input type="hidden" value="" id="productCountryId" />
                    <input type="hidden" value="" id="productColorId" />
                    <input type="hidden" value="" id="shopId" />




                    <input type="hidden" value="" id="productId" />
                    <input type="hidden" value="" id="idx_Product" />
                </form>

            </div>
            <div id="statusParent_Product" style="display:none" class="alert alert-success my-alert" role="alert">
                <div id="status_Product" class="alert-text"></div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnClose_product" class="btn purpleback" data-dismiss="modal">Close</button>
                <button id="btnSaveProduct" type="button" class="btn purpleback"> Save changes </button>

            </div>
        </div>
    </div>
</div>








@section Scripts
{
    <environment include="Development">
        @*<script src="~/library/jquery/dist/jquery.min.js"></script>*@
        <script src="~/library/datatables.net/js/jquery.dataTables.js"></script>
        <script src="~/library/datatables.net-bs4/js/dataTables.bootstrap4.js"></script>
        <link href="~/library/datatables.net-bs4/css/dataTables.bootstrap4.css" rel="stylesheet" />

    </environment>

    <environment exclude="Development">
        <script src="~/library/datatables.net/js/jquery.dataTables.js"></script>
        <script src="~/library/datatables.net-bs4/js/dataTables.bootstrap4.js"></script>
        <link href="~/library/datatables.net-bs4/css/dataTables.bootstrap4.css" rel="stylesheet" />

    </environment>
  

    <script src="~/mylib/brand.js"></script>
    <script src="~/mylib/color.js"></script>
    <script src="~/mylib/category.js"></script>
    <script src="~/mylib/country.js"></script>

    <script>

        var ServerRoot = $("#serverUrl").val();

        function formatNumber(num) {
            return num.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')
        }


        function displayPriceBarcode(val) {

            $("#barcodePrice").html(formatNumber(val));
            // var img = $('#barcodeImg').attr('src');
        }

        $(document).ready(function () {

            GetAllProducts();

            $("#barcodeImg").css("margin-left", "10px");
            $("#barcodeImg").css("margin-right", "20px");
            $("#loadingBar").css("display", "block");


            //$(document).on('keyup','#sellingPriceBarcode', printBar );

            $(document).on('click', '#btnPrintBarcode', printBarcode);

            $(document).on('click', '#editProduct', editProduct);
            $(document).on('click', '#deleteProduct', deleteProduct);


            $(document).on('click', '#btnSaveProduct', saveProduct)



            $('#hide').click(function () {
                $('#productdiv').hide();
            });

            $('#show').click(function () {
                $('#productdiv').show();
            });


              $('select').on('change', getShopProducts) 



        }
        )


        var printBarcode = function () {
            var img = $('#barcodeImg').attr('src');
            printJS(img, 'image');
        }



        var getShopProducts = function () {

            $("#allProductsTable").dataTable().fnDestroy();

            var shopId = $("#shopId").val();

            $("#loadingBar").css("display", "none");


             $.ajax(`${ServerRoot}api/shop/getshopproducts/${shopId}`, { method: "get" })
                .then(function (resp) {

                    console.log("Shop Data for - ", shopId);
                    console.log(resp);

                    $("#allProductsTable").dataTable({
                        "scrollX": true,
                        "data": resp,
                        "columns": [
                            {
                                "title": "Product Image", "data": "productImageUrl",
                                "render": function (data) {
                                    return `<img src=${data} width="50" height="50" />`
                                }
                            },
                            {
                                "title": "Code", "data": "prodCode",
                                "render": function (data) {
                                    return `<td> <strong id=${data} > ${data}  </strong>  <input type="hidden" value=${data}  /> </td>`;
                                }
                            },
                            { "title": "Name", "data": "name" },
                            
                            { "title": "Quantity", "data": "quantityAvailable" },
                            { "title": "Status", "data": "status" },
                            {
                                "title": "Last Stock Date", "data": "lastStockDate",
                                "render": function (data) {
                                    return moment(data).format("Do MMM YYYY");
                                    }
                            },
                            { "title": "Shop Id", "data": "shopId" },
                            {
                                "title": "Edit",
                                "data": "id"
                            },
                            {
                                "title": "Delete",
                                "data": "id"

                            }
                          
                           

                        ],

                        "columnDefs":
                            [
                                {
                                    "targets": 7,

                                    "render": function (data) {
                                        var update = `<button id="editProduct" data-id="${data}" class="btn btn-primary btn-sm mr-2" data-toggle="modal" data-target="#modal_product"><i class="fa fa-2 fa-edit"></i></button>`


                                        return update;
                                    }

                                },

                                {
                                    "targets": 8,
                                    "render": function (data) {
                                        var deleter = `<button id="deleteProduct" data-id="${data}" class="btn btn-danger btn-sm"> <i class="fa fa-2 fa-trash-alt"></i></button>`
                                        return deleter;
                                    }

                                }
                            ]
                    })

                     $("#loadingBar").css("display", "none");
                });

        }

        //Here
        var GetAllProducts = function () {

            var shopId = $("#shopId").val();

             $("#loadingBar").css("display", "none");

                 $.ajax(ServerRoot + "api/inventory", { method: "get" })
                .then(function (resp) {

                    console.log(resp);

                    $("#allProductsTable").dataTable({
                        "scrollX": true,
                        "data": resp,
                        "columns": [
                            {
                                "title": "Product Image", "data": "productImageUrl",
                                "render": function (data) {
                                    return `<img src=${data} width="50" height="50" />`
                                }
                            },
                            {
                                "title": "Code", "data": "prodCode",
                                "render": function (data) {
                                    return `<td> <strong id=${data} > ${data}  </strong>  <input type="hidden" value=${data}  /> </td>`;
                                }
                            },
                            { "title": "Name", "data": "name" },
                            
                            { "title": "Quantity", "data": "quantityAvailable" },
                            { "title": "Availability", "data": "status" },
                            {
                                "title": "Last Stock Date", "data": "lastStockDate",
                                "render": function (data) {
                                    return moment(data).format("Do MMM YYYY");
                                    }
                            },
                            { "title": "Shop Id", "data": "shopId" },
                            {
                                "title": "Edit",
                                "data": "id"
                            },
                            {
                                "title": "Delete",
                                "data": "id"

                            }
                          
                           

                        ],

                        "columnDefs":
                            [
                                {
                                    "targets": 7,

                                    "render": function (data) {
                                        var update = `<button id="editProduct" data-id="${data}" class="btn btn-primary btn-sm mr-2" data-toggle="modal" data-target="#modal_product"><i class="fa fa-2 fa-edit"></i></button>`


                                        return update;
                                    }

                                },

                                {
                                    "targets": 8,
                                    "render": function (data) {
                                        var deleter = `<button id="deleteProduct" data-id="${data}" class="btn btn-danger btn-sm"> <i class="fa fa-2 fa-trash-alt"></i></button>`
                                        return deleter;
                                    }

                                }
                            ]
                    })
                     $("#loadingBar").css("display", "none");
                });
            

           

        }


        var deleteProduct = function () {

            var btnDelete = $(this);
            var productId = btnDelete.attr('data-id');


            // debugger;

            var delstate = confirm("Are you sure you want to delete this Item !?");

            if (delstate) {

                $.ajax({
                    url: `${ServerRoot}api/inventory/${productId}`,
                    type: "DELETE"
                }).then(result => {

                    alert(`Item with ID : ${productId} has been deleted !`);
                    window.location.reload();
                })

            }
            else {
                return false;
            }


        }

        // Binding Data to Editproduct Modal Form
        var editProduct = function () {

            var btnEdit = $(this);
            var productId = btnEdit.attr('data-id');

            $.ajax(`${ServerRoot}api/inventory/${productId}`, { method: "get" })
                .then(resp => {
                    console.log(resp);
                    var newDate = moment(resp.lastStockDate).format("YYYY-MM-DD");

                    $("#name").val(resp.name);
                    $("#code").html(resp.prodCode);
                    $("#costprice").val(resp.costPrice);
                    $("#size").val(resp.prodSize);
                    $("#discountSellingPrice").val(resp.discountSellingPrice);
                    $("#normalSellingPrice").val(resp.normalSellingPrice);
                    $("#qty").val(resp.quantityAvailable);
                    $("#laststockdate").val(newDate);

                    $("#salesDiscount").val(resp.salesDiscount);
                    $("#shopId").val(resp.shopId);

                    $("#productId").val(resp.id);
                    $("#productImageUrl").val(resp.productImageUrl);
                    $("#productBarcodeUrl").val(resp.productBarcodeUrl);
                    $("#productBrandId").val(resp.productBrandId);
                    $("#productColorId").val(resp.productColorId);
                    $("#productCountryId").val(resp.productCountryId);
                    $("#productCategoryId").val(resp.productCategoryId);






                }).catch(err => {


                })



        }


        var saveProduct = function () {

            //  var newDate = moment(resp.lastStockDate).format("YYYY-MM-DD");

            var statusParent = $('#statusParent_Product');
            var status = $('#status_Product');



            var nameprod = $("#name").val();

            var costprice = $("#costprice").val();
            // var discountSellingprice = $("#discountSellingPrice").val();
            var qty = $("#qty").val();
            var laststockdate = $("#laststockdate").val();
            var productCode = $("#code").html();
            var prodImage = $("#productImageUrl").val();
            var prodBarcode = $("#productBarcodeUrl").val();
            var prodId = $("#productId").val();
            var brand = $("#productBrandId").val();
            var category = $("#productCategoryId").val();
            var country = $("#productCountryId").val();
            var color = $("#productColorId").val();

            var normalSellingPrice = $("#normalSellingPrice").val();
            var shop = $("#shopId").val();

            var discount = $("#salesDiscount").val();
            var size = $("#size").val();

            var giveOff = discount * normalSellingPrice;

            var newPrice = normalSellingPrice - giveOff;

            var payload = {
                prodCode: productCode,
                id: Number(prodId),
                productImageUrl: prodImage,
                productBarcodeUrl: prodBarcode,
                name: nameprod,
                costPrice: costprice,
                discountSellingprice: newPrice,
                normalSellingPrice: normalSellingPrice,
                prodsize: size,
                quantityAvailable: qty,
                lastStockDate: laststockdate,
                Brand: brand,
                Color: color,
                Country: country,
                Category: category,
                shopId: shop,
                salesDiscount: discount

            }

            $.ajax(`${ServerRoot}api/inventory`,
                {
                    method: "post",
                    data: JSON.stringify(payload),
                    headers: {
                        "Content-Type": "application/json"
                    }

                })
                .done(data => {

                    $("#result_status").show();
                    status.text(`${data.name}  ${data.status}`);
                    statusParent.show();
                    window.location.reload();

                });








        }


        function displayImage() {


            var selectedFile = document.getElementById('customFile').files[0];
            var img = document.getElementById('product_img')

            var reader = new FileReader();

            reader.onload = function () {
                img.src = this.result
            }
            reader.readAsDataURL(selectedFile);





        }

    </script>

}


